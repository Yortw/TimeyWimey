### YamlMime:ManagedReference
items:
- uid: TimeyWimey.DateTimeOffsetExtensions
  commentId: T:TimeyWimey.DateTimeOffsetExtensions
  id: DateTimeOffsetExtensions
  parent: TimeyWimey
  children:
  - TimeyWimey.DateTimeOffsetExtensions.IsFuture(System.DateTimeOffset)
  - TimeyWimey.DateTimeOffsetExtensions.IsFuture(System.DateTimeOffset,TimeyWimey.Abstractions.IClock)
  - TimeyWimey.DateTimeOffsetExtensions.IsPast(System.DateTimeOffset)
  - TimeyWimey.DateTimeOffsetExtensions.IsPast(System.DateTimeOffset,TimeyWimey.Abstractions.IClock)
  - TimeyWimey.DateTimeOffsetExtensions.TruncateToHours(System.DateTimeOffset)
  - TimeyWimey.DateTimeOffsetExtensions.TruncateToMinutes(System.DateTimeOffset)
  - TimeyWimey.DateTimeOffsetExtensions.TruncateToSeconds(System.DateTimeOffset)
  langs:
  - csharp
  - vb
  name: DateTimeOffsetExtensions
  nameWithType: DateTimeOffsetExtensions
  fullName: TimeyWimey.DateTimeOffsetExtensions
  type: Class
  source:
    id: DateTimeOffsetExtensions
    path: ''
    startLine: 151
  assemblies:
  - cs.temp.dll
  namespace: TimeyWimey
  summary: "\nExtensions for the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> type.\n"
  example: []
  syntax:
    content: public static class DateTimeOffsetExtensions
    content.vb: Public Module DateTimeOffsetExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: TimeyWimey.DateTimeOffsetExtensions.IsFuture(System.DateTimeOffset)
  commentId: M:TimeyWimey.DateTimeOffsetExtensions.IsFuture(System.DateTimeOffset)
  id: IsFuture(System.DateTimeOffset)
  isExtensionMethod: true
  parent: TimeyWimey.DateTimeOffsetExtensions
  langs:
  - csharp
  - vb
  name: IsFuture(DateTimeOffset)
  nameWithType: DateTimeOffsetExtensions.IsFuture(DateTimeOffset)
  fullName: TimeyWimey.DateTimeOffsetExtensions.IsFuture(System.DateTimeOffset)
  type: Method
  source:
    id: IsFuture
    path: ''
    startLine: 164
  assemblies:
  - cs.temp.dll
  namespace: TimeyWimey
  summary: "\nReturns true if <code data-dev-comment-type=\"paramref\" class=\"paramref\">time</code> references a time in the future.\n"
  remarks: "\n<p>This compares <code data-dev-comment-type=\"paramref\" class=\"paramref\">time</code> to <xref href=\"System.DateTimeOffset.Now\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public static bool IsFuture(this DateTimeOffset time)
    parameters:
    - id: time
      type: System.DateTimeOffset
      description: The <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> to check.
    return:
      type: System.Boolean
      description: True if the specified date and time is in the future, otherwise false.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsFuture(time As DateTimeOffset) As Boolean
  overload: TimeyWimey.DateTimeOffsetExtensions.IsFuture*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeyWimey.DateTimeOffsetExtensions.IsFuture(System.DateTimeOffset,TimeyWimey.Abstractions.IClock)
  commentId: M:TimeyWimey.DateTimeOffsetExtensions.IsFuture(System.DateTimeOffset,TimeyWimey.Abstractions.IClock)
  id: IsFuture(System.DateTimeOffset,TimeyWimey.Abstractions.IClock)
  isExtensionMethod: true
  parent: TimeyWimey.DateTimeOffsetExtensions
  langs:
  - csharp
  - vb
  name: IsFuture(DateTimeOffset, IClock)
  nameWithType: DateTimeOffsetExtensions.IsFuture(DateTimeOffset, IClock)
  fullName: TimeyWimey.DateTimeOffsetExtensions.IsFuture(System.DateTimeOffset, TimeyWimey.Abstractions.IClock)
  type: Method
  source:
    id: IsFuture
    path: ''
    startLine: 178
  assemblies:
  - cs.temp.dll
  namespace: TimeyWimey
  summary: "\nReturns true if <code data-dev-comment-type=\"paramref\" class=\"paramref\">time</code> references a time in the future.\n"
  remarks: "\n<p>This compares <code data-dev-comment-type=\"paramref\" class=\"paramref\">time</code> to <xref href=\"System.DateTimeOffset.Now\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public static bool IsFuture(this DateTimeOffset time, IClock clock)
    parameters:
    - id: time
      type: System.DateTimeOffset
      description: The <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> to check.
    - id: clock
      type: TimeyWimey.Abstractions.IClock
      description: A <xref href="TimeyWimey.Abstractions.IClock" data-throw-if-not-resolved="false"></xref> implementation used to obtain the current time.
    return:
      type: System.Boolean
      description: True if the specified date and time is in the future, otherwise false.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsFuture(time As DateTimeOffset, clock As IClock) As Boolean
  overload: TimeyWimey.DateTimeOffsetExtensions.IsFuture*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeyWimey.DateTimeOffsetExtensions.IsPast(System.DateTimeOffset)
  commentId: M:TimeyWimey.DateTimeOffsetExtensions.IsPast(System.DateTimeOffset)
  id: IsPast(System.DateTimeOffset)
  isExtensionMethod: true
  parent: TimeyWimey.DateTimeOffsetExtensions
  langs:
  - csharp
  - vb
  name: IsPast(DateTimeOffset)
  nameWithType: DateTimeOffsetExtensions.IsPast(DateTimeOffset)
  fullName: TimeyWimey.DateTimeOffsetExtensions.IsPast(System.DateTimeOffset)
  type: Method
  source:
    id: IsPast
    path: ''
    startLine: 197
  assemblies:
  - cs.temp.dll
  namespace: TimeyWimey
  summary: "\nReturns true if <code data-dev-comment-type=\"paramref\" class=\"paramref\">time</code> references a time in the past.\n"
  remarks: "\n<p>This compares <code data-dev-comment-type=\"paramref\" class=\"paramref\">time</code> to <xref href=\"System.DateTimeOffset.Now\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public static bool IsPast(this DateTimeOffset time)
    parameters:
    - id: time
      type: System.DateTimeOffset
      description: The <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> to check.
    return:
      type: System.Boolean
      description: True if the specified date and time is in the future, otherwise false.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsPast(time As DateTimeOffset) As Boolean
  overload: TimeyWimey.DateTimeOffsetExtensions.IsPast*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeyWimey.DateTimeOffsetExtensions.IsPast(System.DateTimeOffset,TimeyWimey.Abstractions.IClock)
  commentId: M:TimeyWimey.DateTimeOffsetExtensions.IsPast(System.DateTimeOffset,TimeyWimey.Abstractions.IClock)
  id: IsPast(System.DateTimeOffset,TimeyWimey.Abstractions.IClock)
  isExtensionMethod: true
  parent: TimeyWimey.DateTimeOffsetExtensions
  langs:
  - csharp
  - vb
  name: IsPast(DateTimeOffset, IClock)
  nameWithType: DateTimeOffsetExtensions.IsPast(DateTimeOffset, IClock)
  fullName: TimeyWimey.DateTimeOffsetExtensions.IsPast(System.DateTimeOffset, TimeyWimey.Abstractions.IClock)
  type: Method
  source:
    id: IsPast
    path: ''
    startLine: 211
  assemblies:
  - cs.temp.dll
  namespace: TimeyWimey
  summary: "\nReturns true if <code data-dev-comment-type=\"paramref\" class=\"paramref\">time</code> references a time in the past.\n"
  remarks: "\n<p>This compares <code data-dev-comment-type=\"paramref\" class=\"paramref\">time</code> to <xref href=\"System.DateTimeOffset.Now\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public static bool IsPast(this DateTimeOffset time, IClock clock)
    parameters:
    - id: time
      type: System.DateTimeOffset
      description: The <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> to check.
    - id: clock
      type: TimeyWimey.Abstractions.IClock
      description: A <xref href="TimeyWimey.Abstractions.IClock" data-throw-if-not-resolved="false"></xref> implementation used to obtain the current time.
    return:
      type: System.Boolean
      description: True if the specified date and time is in the future, otherwise false.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsPast(time As DateTimeOffset, clock As IClock) As Boolean
  overload: TimeyWimey.DateTimeOffsetExtensions.IsPast*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeyWimey.DateTimeOffsetExtensions.TruncateToSeconds(System.DateTimeOffset)
  commentId: M:TimeyWimey.DateTimeOffsetExtensions.TruncateToSeconds(System.DateTimeOffset)
  id: TruncateToSeconds(System.DateTimeOffset)
  isExtensionMethod: true
  parent: TimeyWimey.DateTimeOffsetExtensions
  langs:
  - csharp
  - vb
  name: TruncateToSeconds(DateTimeOffset)
  nameWithType: DateTimeOffsetExtensions.TruncateToSeconds(DateTimeOffset)
  fullName: TimeyWimey.DateTimeOffsetExtensions.TruncateToSeconds(System.DateTimeOffset)
  type: Method
  source:
    id: TruncateToSeconds
    path: ''
    startLine: 227
  assemblies:
  - cs.temp.dll
  namespace: TimeyWimey
  summary: "\nReturns a new <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value equivalent to the one provided but with a zero millsecond component.\n"
  example: []
  syntax:
    content: public static DateTimeOffset TruncateToSeconds(this DateTimeOffset value)
    parameters:
    - id: value
      type: System.DateTimeOffset
      description: The <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> value to truncate.
    return:
      type: System.DateTimeOffset
      description: A new <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> missing the millseconds component of <code data-dev-comment-type="paramref" class="paramref">value</code>.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function TruncateToSeconds(value As DateTimeOffset) As DateTimeOffset
  overload: TimeyWimey.DateTimeOffsetExtensions.TruncateToSeconds*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeyWimey.DateTimeOffsetExtensions.TruncateToMinutes(System.DateTimeOffset)
  commentId: M:TimeyWimey.DateTimeOffsetExtensions.TruncateToMinutes(System.DateTimeOffset)
  id: TruncateToMinutes(System.DateTimeOffset)
  isExtensionMethod: true
  parent: TimeyWimey.DateTimeOffsetExtensions
  langs:
  - csharp
  - vb
  name: TruncateToMinutes(DateTimeOffset)
  nameWithType: DateTimeOffsetExtensions.TruncateToMinutes(DateTimeOffset)
  fullName: TimeyWimey.DateTimeOffsetExtensions.TruncateToMinutes(System.DateTimeOffset)
  type: Method
  source:
    id: TruncateToMinutes
    path: ''
    startLine: 239
  assemblies:
  - cs.temp.dll
  namespace: TimeyWimey
  summary: "\nReturns a new <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value equivalent to the one provided but with zero second and millsecond components.\n"
  example: []
  syntax:
    content: public static DateTimeOffset TruncateToMinutes(this DateTimeOffset value)
    parameters:
    - id: value
      type: System.DateTimeOffset
      description: The <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> value to truncate.
    return:
      type: System.DateTimeOffset
      description: A new <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> missing the seconds and millseconds components of <code data-dev-comment-type="paramref" class="paramref">value</code>.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function TruncateToMinutes(value As DateTimeOffset) As DateTimeOffset
  overload: TimeyWimey.DateTimeOffsetExtensions.TruncateToMinutes*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TimeyWimey.DateTimeOffsetExtensions.TruncateToHours(System.DateTimeOffset)
  commentId: M:TimeyWimey.DateTimeOffsetExtensions.TruncateToHours(System.DateTimeOffset)
  id: TruncateToHours(System.DateTimeOffset)
  isExtensionMethod: true
  parent: TimeyWimey.DateTimeOffsetExtensions
  langs:
  - csharp
  - vb
  name: TruncateToHours(DateTimeOffset)
  nameWithType: DateTimeOffsetExtensions.TruncateToHours(DateTimeOffset)
  fullName: TimeyWimey.DateTimeOffsetExtensions.TruncateToHours(System.DateTimeOffset)
  type: Method
  source:
    id: TruncateToHours
    path: ''
    startLine: 251
  assemblies:
  - cs.temp.dll
  namespace: TimeyWimey
  summary: "\nReturns a new <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value equivalent to the one provided but with zero minute, second, and millsecond components.\n"
  example: []
  syntax:
    content: public static DateTimeOffset TruncateToHours(this DateTimeOffset value)
    parameters:
    - id: value
      type: System.DateTimeOffset
      description: The <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> value to truncate.
    return:
      type: System.DateTimeOffset
      description: A new <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> missing the minutes, seconds and millseconds components of <code data-dev-comment-type="paramref" class="paramref">value</code>.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function TruncateToHours(value As DateTimeOffset) As DateTimeOffset
  overload: TimeyWimey.DateTimeOffsetExtensions.TruncateToHours*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: TimeyWimey
  commentId: N:TimeyWimey
  isExternal: false
  name: TimeyWimey
  nameWithType: TimeyWimey
  fullName: TimeyWimey
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.DateTimeOffset.Now
  commentId: P:System.DateTimeOffset.Now
- uid: TimeyWimey.DateTimeOffsetExtensions.IsFuture*
  commentId: Overload:TimeyWimey.DateTimeOffsetExtensions.IsFuture
  isExternal: false
  name: IsFuture
  nameWithType: DateTimeOffsetExtensions.IsFuture
  fullName: TimeyWimey.DateTimeOffsetExtensions.IsFuture
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TimeyWimey.Abstractions.IClock
  commentId: T:TimeyWimey.Abstractions.IClock
  parent: TimeyWimey.Abstractions
  isExternal: false
  name: IClock
  nameWithType: IClock
  fullName: TimeyWimey.Abstractions.IClock
- uid: TimeyWimey.Abstractions
  commentId: N:TimeyWimey.Abstractions
  isExternal: false
  name: TimeyWimey.Abstractions
  nameWithType: TimeyWimey.Abstractions
  fullName: TimeyWimey.Abstractions
- uid: TimeyWimey.DateTimeOffsetExtensions.IsPast*
  commentId: Overload:TimeyWimey.DateTimeOffsetExtensions.IsPast
  isExternal: false
  name: IsPast
  nameWithType: DateTimeOffsetExtensions.IsPast
  fullName: TimeyWimey.DateTimeOffsetExtensions.IsPast
- uid: TimeyWimey.DateTimeOffsetExtensions.TruncateToSeconds*
  commentId: Overload:TimeyWimey.DateTimeOffsetExtensions.TruncateToSeconds
  isExternal: false
  name: TruncateToSeconds
  nameWithType: DateTimeOffsetExtensions.TruncateToSeconds
  fullName: TimeyWimey.DateTimeOffsetExtensions.TruncateToSeconds
- uid: TimeyWimey.DateTimeOffsetExtensions.TruncateToMinutes*
  commentId: Overload:TimeyWimey.DateTimeOffsetExtensions.TruncateToMinutes
  isExternal: false
  name: TruncateToMinutes
  nameWithType: DateTimeOffsetExtensions.TruncateToMinutes
  fullName: TimeyWimey.DateTimeOffsetExtensions.TruncateToMinutes
- uid: TimeyWimey.DateTimeOffsetExtensions.TruncateToHours*
  commentId: Overload:TimeyWimey.DateTimeOffsetExtensions.TruncateToHours
  isExternal: false
  name: TruncateToHours
  nameWithType: DateTimeOffsetExtensions.TruncateToHours
  fullName: TimeyWimey.DateTimeOffsetExtensions.TruncateToHours
